<!doctype html>
<html lang="en">
	<head>
		<?= $this->fetch('/partials/header.phtml') ?>
	</head>
	<body>
		<?= $this->fetch('/partials/navbar.phtml', $navbar) ?>
		
		<?= $this->fetch('/partials/toolbar.phtml', $navbar) ?>
		
		<?php $customers_enabled 		= (isset($customers) and count($customers) > 0); ?>
		<?php $documentsTypes_enabled	= (isset($documentsTypes) and count($documentsTypes) > 0); ?>
		<?php $banks_enabled 			= (isset($banks) and count($banks) > 0); ?>
		<?php $banksAccounts_enabled 	= (isset($banksAccounts) and count($banksAccounts) > 0); ?>
		<?php $currencies_enabled 		= (isset($currencies) and count($currencies) > 0); ?>
		
		<div class="container-fluid">
			<div class="content">
				<div class="row">
					<div class="col-lg-12 p-0">
						<div class="card card-no-rounded">
							<div class="card-header d-flex justify-content-between align-items-center">
								<span><b><i class="fa fa-handshake"></i> Ventas <i class="fa fa-chevron-right"></i> Cobranza</b></span>
							</div>
							
							<?php if (isset($headerId) and $headerId > 0) : ?>
							<data name="document-data" data-header-id="<?= $headerId ?>"></data>
							<?php endif; ?>
							
							<div class="card-body">
								
								<div class="row">
									<div class="col-lg-3 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">Cliente:</label>
											<br>
											<label <?= !$customers_enabled ? '' : 'class="d-none" ' ?>name="customers-label"><i class="fa fa-exclamation-triangle"></i> No hay clientes disponibles!</label>
											<select class="form-control<?= $customers_enabled ? '' : ' d-none' ?>" name="customers-select">
											<?php if ($customers_enabled) : ?>
												<option value="N/A">Seleccionar cliente...</option>
											<?php foreach($customers as $customer) : ?>
												<option value="<?= $customer->id ?>">
													<?= $customer->unique_code . ' | ' . $customer->business_name ?>
												</option>
											<?php endforeach; ?>
											<?php endif; ?>
											</select>
										</div>
									</div>
									
									<div class="col-lg-3 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">Comprobante:</label>
											<br>
											<label <?= !$documentsTypes_enabled ? '' : 'class="d-none" ' ?>name="docs-types-label"><i class="fa fa-exclamation-triangle"></i> No hay documentos disponibles!</label>
											<select class="form-control<?= $documentsTypes_enabled ? '' : ' d-none' ?>" name="docs-types-select">
											<?php if ($documentsTypes_enabled) : ?>
												<option value="N/A">Seleccionar documento...</option>
											<?php foreach($documentsTypes as $documentType) : ?>
												<option
													value="<?= $documentType->unique_code ?>"
													data-sequence="<?= $documentType->sequence ?>">
													<?= trim($documentType->description) ?>
												</option>
											<?php endforeach; ?>
											<?php endif; ?>
											</select>
										</div>
									</div>
									
									<div class="col-lg-3 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">Fecha:</label>
											<br>
											<input type="date" class="form-control" name="doc-date" />
										</div>
									</div>
									
									<div class="col-lg-3 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">No. de comprobante:</label>
											<br>
											<input type="text" class="form-control" name="doc-number" value="0000-00000000" />
										</div>
									</div>
								</div>
								
								<div class="row mt-2">
									<div class="col">
										<label class="font-weight-bold small text-primary" name="customer-balance-text"></label>
									</div>
								</div>
								
								<hr />
								<div class="row mt-2">
									<div class="col-lg-12">
										<div class="row">
											<div class="col">
												<div class="badge badge-primary badge-outlined" name="btn-add-cash"><i class="fa fa-plus"></i> Efectivo</div>
												<div class="badge badge-primary badge-outlined" name="btn-add-materials"><i class="fa fa-plus"></i> Materiales</div>
												<div class="badge badge-primary badge-outlined" name="btn-add-third-party-check"><i class="fa fa-plus"></i> Cheque de Tercero</div>
												<div class="badge badge-primary badge-outlined" name="btn-add-transfer"><i class="fa fa-plus"></i> Transferencia Bancaria</div>
												<!-- <div class="badge badge-primary badge-outlined" name="btn-add-deposit"><i class="fa fa-plus"></i> Depósito Bancario</div> -->
												<!-- <div class="badge badge-primary badge-outlined" name="btn-add-own-check"><i class="fa fa-plus"></i> Cheque Propio</div> -->
												<!-- <div class="badge badge-danger badge-outlined" name="btn-add-credit-card"><i class="fa fa-plus"></i> Tarjeta de Crédito</div> -->
											</div>
										</div>
										
										<div class="row mt-2">
											<div class="col">
												<div class="table" name="table-content">
													<table class="table table-sm table-striped table-hover table-responsive-sm" name="detail-table">
														<thead>
															<tr>
																<th></th>
																<th>#</th>
																<th>Detalle</th>
																<th>Monto AR$</th>
															</tr>
														</thead>
														<tbody>
														</tbody>
													</table>
												</div>
											</div>
										</div>
									</div>
								</div>
								
								<hr />
								<div class="row mt-2">
									<div class="col-lg-6 col-md-12">
										<div class="form-group">
											<label class="font-weight-bold">Observaciones:</label>
											<br>
											<input type="text" class="form-control" name="doc-comments" />
										</div>
									</div>
								</div>
								
								<div class="row mt-2">
									<div class="col-lg-2 col-md-3">
										<div class="form-group">
											<label class="font-weight-bold">Cotización U$D:</label>
											<br>
											<div class="input-group">
												<div class="input-group-prepend">
													<span class="input-group-text">AR$</span>
												</div>
												<input type="number" class="form-control" name="doc-exchange" value="0" />
											</div>
										</div>
									</div>
									
									<div class="col-lg-2 col-md-3">
										<div class="form-group">
											<label class="font-weight-bold">Retenciones:</label>
											<br>
											<div class="input-group">
												<div class="input-group-prepend">
													<span class="input-group-text">AR$</span>
												</div>
												<input type="number" class="form-control" name="doc-withholdings" value="0" />
											</div>
										</div>
									</div>
									
									<div class="col-lg-2 col-md-3">
										<div class="form-group">
											<label class="font-weight-bold">Total:</label>
											<br>
											<div class="input-group">
												<div class="input-group-prepend">
													<span class="input-group-text">AR$</span>
												</div>
												<input type="number" class="form-control" name="doc-total" value="0" disabled />
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<!-- add or edit cash dialog -->
		<div class="d-none" name="add-or-edit-cash-dialog" title="Efectivo">
			<div class="content">
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Moneda:</label>
							<br>
							<label <?= !$currencies_enabled ? '' : 'class="d-none" ' ?>><i class="fa fa-exclamation-triangle"></i> No hay monedas disponibles!</label>
							<select class="form-control<?= $currencies_enabled ? '' : ' d-none' ?>" name="dialog-cash-currency-select">
							<?php if ($currencies_enabled) : ?>
								<option value="N/A">Seleccionar moneda...</option>
							<?php foreach($currencies as $currency) : ?>
								<option
									value="<?= $currency->unique_code ?>"
									data-display="<?= trim($currency->description) ?>">
									<?= trim($currency->description) ?>
								</option>
							<?php endforeach; ?>
							<?php endif; ?>
							</select>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Monto:</label>
							<br>
							<div class="input-group">
								<div class="input-group-prepend">
									<span class="input-group-text">$</span>
								</div>
							    <input type='number' step='.01' value='0' class='form-control' name='dialog-cash-amount'>
						    </div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<!-- add or edit materials dialog -->
		<div class="d-none" name="add-or-edit-materials-dialog" title="Materiales">
			<div class="content">
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Moneda:</label>
							<br>
							<label <?= !$currencies_enabled ? '' : 'class="d-none" ' ?>><i class="fa fa-exclamation-triangle"></i> No hay monedas disponibles!</label>
							<select class="form-control<?= $currencies_enabled ? '' : ' d-none' ?>" name="dialog-materials-currency-select">
							<?php if ($currencies_enabled) : ?>
								<option value="N/A">Seleccionar moneda...</option>
							<?php foreach($currencies as $currency) : ?>
								<option
									value="<?= $currency->unique_code ?>"
									data-display="<?= trim($currency->description) ?>">
									<?= trim($currency->description) ?>
								</option>
							<?php endforeach; ?>
							<?php endif; ?>
							</select>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Monto:</label>
							<br>
							<div class="input-group">
								<div class="input-group-prepend">
									<span class="input-group-text">$</span>
								</div>
							    <input type='number' step='.01' value='0' class='form-control' name='dialog-materials-amount'>
					    	</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<!-- add or edit third party check -->
		<div class="d-none" name="add-or-edit-third-party-check-dialog" title="Cheque de Tercero">
			<div class="content">
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Banco:</label>
							<br>
							<label <?= !$banks_enabled ? '' : 'class="d-none" ' ?>><i class="fa fa-exclamation-triangle"></i> No hay bancos disponibles!</label>
							<select class="form-control<?= $banks_enabled ? '' : ' d-none' ?>" name="dialog-third-party-check-bank-select">
							<?php if ($banks_enabled) : ?>
								<option value="N/A">Seleccionar banco...</option>
							<?php foreach($banks as $bank) : ?>
								<option
									value="<?= $bank->id ?>"
									data-display="<?= $bank->unique_code ?>">
									<?= $bank->unique_code . ' | ' . trim($bank->description) ?>
								</option>
							<?php endforeach; ?>
							<?php endif; ?>
							</select>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Número de Cheque:</label>
							<br>
							<input type='text' class='form-control' name='dialog-third-party-check-number'>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Fecha de Vencimiento:</label>
							<br>
							<input type='date' class='form-control' name='dialog-third-party-check-expiration-date'>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Portador:</label>
							<br>
							<input type='text' class='form-control' name='dialog-third-party-check-owner'>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Monto:</label>
							<br>
							<div class="input-group">
								<div class="input-group-prepend">
									<span class="input-group-text">AR$</span>
								</div>
							    <input type='number' step='.01' value='0' class='form-control' name='dialog-third-party-check-amount'>
						    </div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<!-- add or edit transfer -->
		<div class="d-none" name="add-or-edit-transfer-dialog" title="Transferencia Bancaria">
			<div class="content">
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Cuenta Bancaria:</label>
							<br>
							<label <?= !$banksAccounts_enabled ? '' : 'class="d-none" ' ?>><i class="fa fa-exclamation-triangle"></i> No hay cuentas bancarias disponibles!</label>
							<select class="form-control<?= $banksAccounts_enabled ? '' : ' d-none' ?>" name="dialog-transfer-bank-account-select">
							<?php if ($banksAccounts_enabled) : ?>
								<option value="N/A">Seleccionar cuenta bancaria...</option>
							<?php foreach($banksAccounts as $bankAccount) : ?>
								<option
									value="<?= $bankAccount->id ?>"
									data-display="<?= $bankAccount->bank->unique_code . ' | ' . trim($bankAccount->alias) ?>">
									<?= $bankAccount->bank->unique_code . ' | ' . trim($bankAccount->alias) . ' | ' . trim($bankAccount->number) ?>
								</option>
							<?php endforeach; ?>
							<?php endif; ?>
							</select>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">CBU:</label>
							<br>
							<input type='text' class='form-control' name='dialog-transfer-cbu'>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Nro. de Transferencia:</label>
							<br>
							<input type='text' class='form-control' name='dialog-transfer-number'>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Fecha de Transferencia:</label>
							<br>
							<input type='date' class='form-control' name='dialog-transfer-date'>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Monto:</label>
							<br>
							<div class="input-group">
								<div class="input-group-prepend">
									<span class="input-group-text">AR$</span>
								</div>
							    <input type='number' step='.01' value='0' class='form-control' name='dialog-transfer-amount'>
						    </div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<!-- add or edit deposit -->
		<div class="d-none" name="add-or-edit-deposit-dialog" title="Depósito Bancario">
			<div class="content">
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Cuenta Bancaria:</label>
							<br>
							<label <?= !$banksAccounts_enabled ? '' : 'class="d-none" ' ?>><i class="fa fa-exclamation-triangle"></i> No hay cuentas bancarias disponibles!</label>
							<select class="form-control<?= $banksAccounts_enabled ? '' : ' d-none' ?>" name="dialog-deposit-bank-account-select">
							<?php if ($banksAccounts_enabled) : ?>
								<option value="N/A">Seleccionar cuenta bancaria...</option>
							<?php foreach($banksAccounts as $bankAccount) : ?>
								<option
									value="<?= $bankAccount->id ?>"
									data-display="<?= $bankAccount->bank->unique_code . ' | ' . trim($bankAccount->alias) ?>">
									<?= $bankAccount->bank->unique_code . ' | ' . trim($bankAccount->alias) . ' | ' . trim($bankAccount->number) ?>
								</option>
							<?php endforeach; ?>
							<?php endif; ?>
							</select>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Nro. de Comprobante:</label>
							<br>
							<input type='text' class='form-control' name='dialog-deposit-number'>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Depositante:</label>
							<br>
							<input type='text' class='form-control' name='dialog-deposit-owner'>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Fecha de Depósito:</label>
							<br>
							<input type='date' class='form-control' name='dialog-deposit-date'>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Monto:</label>
							<br>
							<div class="input-group">
								<div class="input-group-prepend">
									<span class="input-group-text">AR$</span>
								</div>
							    <input type='number' step='.01' value='0' class='form-control' name='dialog-deposit-amount'>
						    </div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<!-- update exchange confirm dialog -->
		<div class="d-none" name="update-exchange-confirm-dialog" title="Cotización">
			<div class="content">
				<div class="row">
					<div class="col-12">
						<p><i class="fa fa-alert"></i> ¿Desea actualizar la cotización del U$D?</p>
					</div>
				</div>
			</div>
		</div>
		
		<?= $this->fetch('/partials/libs.phtml') ?>
		
		<!-- Optional JavaScript -->
		<script>
			$(function(){
				
				// ***************************** //
				// ** DOCUMENT INITIALIZATION ** //
				// ***************************** //
				
				// block UI on every ajax
				$(document)
					.ajaxStart(function() {
						$.blockUI({ message : null });
					})
					.ajaxStop(function() {
						$.unblockUI();
					});
				
				// dialogs variables
				var allDialogs = [];
				
				allDialogs['cash'] = {
					selector: $('div[name="add-or-edit-cash-dialog"]'),
					width:	'20%',
					displayText: 'Efectivo',
					fields: [
						{ tag: 'select', name: 'currency', column: 'currency_code', defaultValue: 'ARS', 	visible: true },
						{ tag: 'input',  name: 'amount',   column: 'amount', 	 	defaultValue: 0,		visible: true },
					],
				};
				
				allDialogs['materials'] = {
					selector: $('div[name="add-or-edit-materials-dialog"]'),
					width:	'20%',
					displayText: 'Materiales',
					fields: [
						{ tag: 'select', name: 'currency', column: 'currency_code', defaultValue: 'ARS', 	visible: true },
						{ tag: 'input',  name: 'amount',   column: 'amount', 	 	defaultValue: 0,		visible: true },
					],
				};
				
				allDialogs['third-party-check'] = {
					selector: $('div[name="add-or-edit-third-party-check-dialog"]'),
					width:	'20%',
					displayText: 'Cheque de Tercero',
					fields: [
						{ tag: 'select',	name: 'bank', 				column: 'bank_id', 			defaultValue: 'N/A',	visible: true },
						{ tag: 'input', 	name: 'number', 			column: 'number',			defaultValue: "", 		visible: true },
						{ tag: 'input', 	name: 'owner', 				column: 'owner',			defaultValue: "", 		visible: false },
						{ tag: 'input', 	name: 'expiration-date',	column: 'expiration_at',	defaultValue: null, 	visible: false },
						{ tag: 'input', 	name: 'amount', 			column: 'amount',			defaultValue: 0, 		visible: false },
					],
				};
				
				allDialogs['transfer'] = {
					selector: $('div[name="add-or-edit-transfer-dialog"]'),
					width:	'20%',
					displayText: 'Transferencia',
					fields: [
						{ tag: 'select', 	name: 'bank-account', 	column: 'bank_account_id', 	defaultValue: 'N/A',	visible: true },
						{ tag: 'input', 	name: 'cbu', 			column: 'cbu',				defaultValue: "", 		visible: true },
						{ tag: 'input', 	name: 'number', 		column: 'number',			defaultValue: "",		visible: false },
						{ tag: 'input', 	name: 'date', 			column: 'dated_at',			defaultValue: null, 	visible: false },
						{ tag: 'input', 	name: 'amount', 		column: 'amount',			defaultValue: 0, 		visible: false },
					],
				};
				
				allDialogs['deposit'] = {
					selector: $('div[name="add-or-edit-deposit-dialog"]'),
					width:	'20%',
					displayText: 'Depósito',
					fields: [
						{ tag: 'select',	name: 'bank-account',	column: 'bank_account_id', 	defaultValue: 'N/A', 	visible: true },
    					{ tag: 'input', 	name: 'number', 		column: 'number',			defaultValue: "", 		visible: true },
						{ tag: 'input', 	name: 'owner', 			column: 'owner',			defaultValue: "", 		visible: false },
						{ tag: 'input', 	name: 'date', 			column: 'dated_at',			defaultValue: null, 	visible: false },
						{ tag: 'input', 	name: 'amount', 		column: 'amount', 			defaultValue: 0, 		visible: false },
					],
				};
				
				var updateExchangeConfirmDialog = $('div[name="update-exchange-confirm-dialog"]');
				
				var currentRecordNumber = 0;	
				
				// create viewports
				$("body").append('<div class="device-xs d-block d-sm-none"></div>');
				$("body").append('<div class="device-sm d-none d-sm-block d-md-none"></div>');
				$("body").append('<div class="device-md d-none d-md-block d-lg-none"></div>');
				$("body").append('<div class="device-lg d-none d-lg-block d-xl-none"></div>');
				$("body").append('<div class="device-xl d-none d-xl-block"></div>');
				
				setupSelects();
				
				setupDialogs();
				
				setupButtons();
				
				initializeDocument();
				
				// Context Menu
				$.contextMenu({
					selector: 'span[name="btn-row-context-menu"]',
					trigger: 'left',
					items: {
						"edit": {
							name: '<span><i class="fa fa-edit"></i> Editar</span>',
							isHtmlName: true,
							callback: function(itemKey, opt, e) {
								var recordKey = opt.$trigger.attr('data-record-key');
								var row = $('tr#' + recordKey);
								
								var type 		= row.attr("data-record-type");
								var dialog 		= allDialogs[type];
								var recordData 	= [];
								
								recordData['record_key'] 	= recordKey;
								dialog.fields.forEach(function(field){
									recordData[field.name] = row.attr('data-' + field.name);
								});
								
								showDialog(type, recordData);
								
								return true;            
							}   
						},
						"delete": {
							name: '<span><i class="fa fa-trash-alt"></i> Eliminar</span>',
							isHtmlName: true,
							callback: function(itemKey, opt, e) {
								var row = $('tr#' + opt.$trigger.attr('data-record-key'));
								row.remove();
								
								// update document totals
								updateDocumentTotals();
								
								return true;            
							}   
						},
					}
				});
				
				// ********************* //
				// ** DOCUMENT EVENTS ** //
				// ********************* //
				
				// on window resize
				$(window).resize(function(){
					
					// update size if add or edit dialogs are open
					allDialogs.forEach(function(dialog) {
						if ( dialog.selector.dialog("isOpen") )
							updateDialogSize(dialog);
					});
				});
				
				// on before unload
				$(window).on('beforeunload', function() {
					if (hasUnsavedChanges())
						return "Hay cambios no guardados, ¿desea salir de todas maneras?";
				});
				
				// customers change
				$('select[name="customers-select"]').change(function(e) {
				    var customerId = $(this).val();
					updateCustomerBalance(customerId);
				});
				
				// documents types change
				$('select[name="docs-types-select"]').change(function(e) {
				    var seq = $(this).find("option:selected").attr("data-sequence");
					updateDocumentNumber(seq);
				});
				
				// document date change (blur)
				$('input[name="doc-date"]').blur(function(e) {
					if ( $('input[name="doc-exchange"]').val() == 0 ) {
						var exchangeDate = $(this).val();
						updateDocumentExchange(exchangeDate);
					}
					else {
						updateExchangeConfirmDialog.dialog("open");
					}
				});
				
				// documents exchange change
				$('input[name="doc-exchange"]').change(function(e) {
					updateDetailAmounts( $(this).val() );
				});
				
				// withholdings change
				$('input[name="doc-withholdings"]').change(function(e) {
					updateDocumentTotals();
				});
				
				// on input type="number" got focus
				$('input[type="number"]').focus(function(e) {
					if ( $(this).val() == 0 ) {
						$(this).val("");
					}
				});
				
				// ************************ //
				// ** DOCUMENT FUNCTIONS ** //
				// ************************ //
				
				// check viewport
				function isBreakpoint(alias) {
					return $('.device-' + alias).is(':visible');
				}			
				
				// update add or edit products dialog size
				function updateDialogSize(dialog) {
					
					// define dialog width
					var dialogWidth = dialog.width;
					if (isBreakpoint('sm') || isBreakpoint('xs')) {
						dialogWidth = "95%";
					}
					
					// set width
					dialog.selector.dialog({ width : dialogWidth });
				}			
				
				function setupSelects() {
					
					// customers
					if ( !$('select[name="customers-select"]').hasClass("d-none") ) {
						$('select[name="customers-select"]').select2({ width : '100%' });
					}
					
					// documents types
					if ( !$('select[name="docs-types-select"]').hasClass("d-none") ) {
						$('select[name="docs-types-select"]').select2({ width : '100%' });
					}
					
					// all dialog select methods
					if ( !$('select[name^="dialog-"][name$="-select"]').hasClass("d-none") ) {
						$('select[name^="dialog-"][name$="-select"]').select2({ width : '100%' });
					}				
				}
				
				function updateDocumentNumber(seq) {
					var docNumber = "0000-00000000";
				    var pad = "00000000";
                    
                    if (seq != undefined) {
                        docNumber = "0000-" + pad.substring(0, pad.length - seq.length) + seq;
                    }

				    $('input[name="doc-number"]').val(docNumber);
				}
				
				function setupDialogs()
				{
					// methods dialogs
					for (var key in allDialogs)
					{						
						allDialogs[key].selector.dialog({
							resizable: false,
							height: "auto",
							modal: true,
							autoOpen: false,
							option: { dialogKey: key },
							buttons: {
								Cancelar: function() {
									$(this).dialog("close");
								},
								Agregar: function() {

									/* TO DO
									if ( $('input[name="dialog-cash-amount"]').val() == 0 ) {
										$.stdShowMessage({
											icon: 'fa fa-exclamation-triangle',
											message: "Debe ingresar un monto diferente a cero",
											type: 'warning'
										});
										
										return;
									}*/
									
									var dialogKey 	= $(this).dialog("option", "dialogKey");
									var window		= allDialogs[dialogKey];
									var detailText	= window.displayText;

									var recordData = [];
									window.fields.forEach(function(field)
									{
										var tag  	= field.tag;
										var name 	= field.name;
										var visible	= field.visible;
										var detail	= "";
										
										if (tag == 'select') {
											recordData[name] = $('select[name="dialog-' + dialogKey + '-' + name + '-select"] option:selected').val();
											
											if (visible) {
												detail = " | " + $('select[name="dialog-' + dialogKey + '-' + name + '-select"] option:selected').attr("data-display");
											}
										}
										else {
											recordData[name] = $(tag + '[name="dialog-' + dialogKey + '-' + name + '"]').val();
											
											if (visible) {
												detail = " | " + recordData[name];
											}
										}
										
										detailText += detail;
									});
									
									var recordKey = $(this).dialog("option", "recordKey");
									if (recordKey == 0) {
										addNewRecord(dialogKey, detailText, recordData);
									}
									else {
										editRecord(recordKey, dialogKey, detailText, recordData);
									}
									
									$(this).dialog("close");
								},
							},
							create: function() {
								$(this).removeClass("d-none");
							},
							// # select2: resolve focus issue
							_allowInteraction: function (event) {
								return !!$(event.target).is(".select2-input") || this._super(event);
							},
						});
						
						allDialogs[key].selector.dialog("option", "dialogKey", key);
					}
					
					// update exchange confirm dialog
					updateExchangeConfirmDialog.dialog({
						resizable: false,
						height: "auto",
						modal: true,
						autoOpen: false,
						buttons: {
							Cancelar: function() {
								$(this).dialog("close");
							},
							Aceptar: function() {
								
								var exchangeDate = $('input[name="doc-date"]').val();
								updateDocumentExchange(exchangeDate);
								
								$(this).dialog("close");
							},
						},
						create: function() {
							$(this).removeClass("d-none");
						},
					});
				}
				
				function setupButtons()
				{
					// toolbar actions
					$('#btn-toolbar-save').click(function(e) {
						e.preventDefault();
						saveDocument();
					});
					
					// add payment methods
					for (var key in allDialogs)
					{
						$('div[name="btn-add-' + key + '"]').attr("data-type", key);
						$('div[name="btn-add-' + key + '"]').on('click', function(e) {
							e.preventDefault();
							showDialog( $(this).attr("data-type") );
						});
					}
				}
				
				function showDialog(type, recordData)
				{
					var dialog = allDialogs[type];
					
					if (recordData != undefined) {
						dialog.selector.dialog("option", "recordKey", recordData.record_key);
					}
					else {
						dialog.selector.dialog("option", "recordKey", 0);
					}
					
					dialog.fields.forEach(function(field) {
						var tag  	= field.tag;
						var name 	= field.name;
						var value 	= field.defaultValue;
						
						if (recordData != undefined) {
							value = recordData[name];
						}

						if (tag == 'select') {
							$('select[name="dialog-' + type + '-' + name + '-select"]').val(value).trigger("change");
						}
						else {
							$(tag + '[name="dialog-' + type + '-' + name + '"]').val(value);
						}
					});
					
					updateDialogSize(dialog);
					
					// # select2: resolve focus issue
					if ($.ui && $.ui.dialog && $.ui.dialog.prototype._allowInteraction) {
						var ui_dialog_interaction = $.ui.dialog.prototype._allowInteraction;
						$.ui.dialog.prototype._allowInteraction = function(e) {
							if ($(e.target).closest('.select2-dropdown').length) return true;
							return ui_dialog_interaction.apply(this, arguments);
						};
					}
					
					// open
					dialog.selector.dialog("open");
				}
				
				// get detail table
				function getDetailTable() {
					return $('table[name="detail-table"]');
				}
				
				// get detail table body
				function getDetailTableBody() {
					return getDetailTable().find('tbody');
				}
				
				// get detail table rows
				function getDetailTableRows() {
					return getDetailTableBody().find('tr');
				}
				
				// add new record
				function addNewRecord(type, detailText, data) {
					var body = getDetailTableBody();
					
					currentRecordNumber++;
					
					// 2019-03-13 - exchange to AR$
					exchangeToARS 	= false;
					exchange 		= 0;
					
					var fieldsData = "";
					for (var key in data)
					{
						fieldsData += " data-" + key + "='" + data[key] + "'";
						
						// 2019-03-13 - exchange to AR$
						if (key === 'currency' && data[key] === 'USD') {
							exchangeToARS 	= true;
							exchange 		= $('input[name="doc-exchange"]').val();
						}
					}
					
					var newRecordHTML =
						"<tr id='" + currentRecordNumber + "' data-record-type='" +  type + "'" + fieldsData + ">" +
							"<td class='align-middle'>" +
								"<span class='btn btn-light btn-sm' name='btn-row-context-menu' data-record-key='" + currentRecordNumber + "'><i class='fa fa-ellipsis-v'></i></span>" +
							"</td>" +
							"<td class='align-middle font-weight-bold'>" + currentRecordNumber + "</td>" +
							"<td class='align-middle form-inline' name='col-detail'>" + detailText + "</td>" +
							"<td class='align-middle' name='col-amount'>" + data["amount"] * (exchangeToARS ? exchange : 1) + "</td>" +
						"</tr>";
						
					body.append(newRecordHTML);
					
					updateDocumentTotals();
				}
				
				// edit record
				function editRecord(recordKey, type, detailText, data) {
					var row = $('tr#' + recordKey);
					
					// 2019-03-13 - exchange to AR$
					exchangeToARS 	= false;
					exchange 		= 0;
					
					for (var key in data)
					{
						row.attr("data-" + key, data[key]);
						
						// 2019-03-13 - exchange to AR$
						if (key === 'currency' && data[key] === 'USD') {
							exchangeToARS 	= true;
							exchange 		= $('input[name="doc-exchange"]').val();
						}
					}
					
					row.find('td[name="col-detail"]').text(detailText);
                    row.find('td[name="col-amount"]').text( data["amount"] * (exchangeToARS ? exchange : 1) );
					
					updateDocumentTotals();
				}				
				
				function updateDocumentTotals() {
					var rows 			= getDetailTableRows();
					var withholdings	= $('input[name="doc-withholdings"]').val();
					var total	 		= 0;
					
					rows.each(function(index){
						//subtotal += parseFloat( $(this).find('td[name="col-amount"]').text() );
						total += parseFloat( $(this).find('td[name="col-amount"]').text() );
					});
					
					
					if (withholdings != '' && $.isNumeric(withholdings)) {
						total += parseFloat(withholdings);
					}
					
					//$('input[name="doc-subtotal"]').val(subtotal);
					$('input[name="doc-total"]').val(total);
				}
				
				function updateCustomerBalance(customerId)
				{	
					if (customerId == "N/A")
					{
						$('label[name="customer-balance-text"]').text("");
					}
					else
					{
						$.ajax({
							method: 'POST',
							url: '/customers/balance/' + customerId,
							dataType: 'json',
							success: function(data, textStatus, jqXHR) {
								if (data.Result == 'OK') {
									$('label[name="customer-balance-text"]').text("Saldo Cta. Cte.: AR$ " + data.Balance);
								}
								else {
									$('label[name="customer-balance-text"]').text("");
								}
							},
							error: function(jqXHR, textStatus, errorThrown) {
								console.warn(jqXHR.responseText);
							},
						});
					}
				}
				
				function updateDocumentExchange(exchangeDate) {
					$.ajax({
						method: 'POST',
						url: '/exchange/onebydate',
						dataType: 'json',
						data: { currency_code: 'USD', dated_at: exchangeDate },
						success: function(data, textStatus, jqXHR) {
							var price = 0;
							if (data.Result == 'OK') {
								price = data.Exchange.price;
								$('input[name="doc-exchange"]').val(price);
							}
							else {
								$('input[name="doc-exchange"]').val(0);
								console.info(data.Message);
							}
							
							// update detail grid
							updateDetailAmounts(price);
						},
						error: function(jqXHR, textStatus, errorThrown) {
							console.warn(jqXHR.responseText);
						},
					});
				}
				
				function updateDetailAmounts(exchange)
				{
					var needUpdateDocumentTotals = false;
					
					var rows = getDetailTableRows();
					rows.each(function(index){
						var row = $(this);
						var type = row.attr('data-record-type');
						
						var currencyCode = row.attr('data-currency');
						if (currencyCode != undefined && currencyCode === 'USD') {
							var amount = row.attr('data-amount');
							
							row.find('td[name="col-amount"]').text(amount * exchange);
							
							needUpdateDocumentTotals = true;
						}
					});
					
					if (needUpdateDocumentTotals)
						updateDocumentTotals();
				}
				
				function saveDocument() {

					if (validateDocument())
					{
						var rows = getDetailTableRows();
						var detailData = [];
						rows.each(function(index){
							var row = $(this);
							var type = row.attr('data-record-type');
							
							var dataCollection = new Object();
							dataCollection["type"] = type;
							allDialogs[type].fields.forEach(function(field){
								dataCollection[field.column] = row.attr('data-' + field.name);
							});
							
							detailData[index] = dataCollection;
						});

						var documentData = {
							customer_id : 			$('select[name="customers-select"] option:selected').val(),
							document_type_code : 	$('select[name="docs-types-select"] option:selected').val(),
							number : 				$('input[name="doc-number"]').val(),
							dated_at : 				$('input[name="doc-date"]').val(),
							comments : 				$('input[name="doc-comments"]').val(),
							exchange : 				parseFloat($('input[name="doc-exchange"]').val()),
							withholdings : 			parseFloat($('input[name="doc-withholdings"]').val()),
							total : 				parseFloat($('input[name="doc-total"]').val()),
							detail :				detailData,
						};
						
						if (isEdit())
						{
							documentData["id"] = getHeaderId();
						}

						$.ajax({
							method: 'POST',
							url: '/collections/' + (isEdit() ? 'update' : 'create'),
							dataType: 'json',
							data: documentData,
							success: function(data, textStatus, jqXHR) {
								if (data.status == 'OK') {
									$.stdShowMessage({
										icon: 'fa fa-check',
										message: data.message,
										type: 'info'
									});
									
									if (!isEdit())
									{
										resetDocument(documentData);
									}
								}
								else {
									alert('error');
								}
							},
							error: function(jqXHR, textStatus, errorThrown) {
								console.warn(jqXHR.responseText);
							},
						});
					}				
				}
				
				function validateDocument() {
					var message = "<b>Documento no guardado:</b>";
					var error = false;
					
					if ( $('select[name="customers-select"]').val() == "N/A" ) {
						message += "<br>Debe seleccionar un cliente";
						error = true;
					}
					
					if ( $('select[name="docs-types-select"]').val() == "N/A" ) {
						message += "<br>Debe seleccionar un documento";
						error = true;
					}

					if (getDetailTableRows().length <= 0) {
						message += "<br>Debe ingresar al menos un medio de pago";
						error = true;
					}
					
					if (error) {
						$.stdShowMessage({
							icon: 'fa fa-exclamation-triangle',
							message: message,
							type: 'warning'
						});
					}
					
					return !error;
				}
				
				function resetDocument(data)
				{
					$('select[name="customers-select"]').val('N/A').trigger('change');
					$('select[name="docs-types-select"]').val('N/A').trigger('change');
					$('input[name="doc-date"]').val("");
					$('input[name="doc-number"]').val("0000-00000000");
					
					getDetailTableBody().empty();
					
					$('input[name="doc-comments"]').val("");
					$('input[name="doc-exchange"]').val(0);
					$('input[name="doc-withholdings"]').val(0);
					$('input[name="doc-total"]').val(0);
					
					currentRecordNumber = 0;
					
					// update document type sequence
					var seq = data.number.trim().substring(5);
					if ( $.isNumeric(seq) ) {
						var nextSeq = parseInt(seq) + 1;
						$('select[name="docs-types-select"] > option[value="' + data.document_type_code + '"]').attr("data-sequence", nextSeq);
					}
				}

				function hasUnsavedChanges()
				{
					if ( $('select[name="customers-select"]').val() != 'N/A' )
						return true;
					
					if ( $('select[name="docs-types-select"]').val() != 'N/A' )
						return true;
					
					if ( $('input[name="doc-date"]').val() != "" )
						return true;
					
					if ( getDetailTableRows().length > 0 )
						return true;
					
					return false;
				}
				
				function initializeDocument()
				{
					if (isEdit())
					{
						var headerId = getHeaderId();
						
						$.ajax({
							method: 'POST',
							url: '/collections/one/' + headerId,
							success: function(data, textStatus, jqXHR) {
								if (data.Result == 'OK')
								{
									// header
									$('select[name="customers-select"]').val(data.Document.customer_id).trigger('change');
									$('select[name="docs-types-select"]').val(data.Document.document_type_code).trigger('change');
									$('input[name="doc-date"]').val(data.Document.dated_at);
									$('input[name="doc-number"]').val(data.Document.number);
									
									// detail
									data.Document.details_cash.forEach(function(record)
									{
										loadDetailItem("cash", record);
									});
									
									data.Document.details_materials.forEach(function(record)
									{
										loadDetailItem("materials", record);
									});
									
									data.Document.details_third_party_checks.forEach(function(record)
									{
										loadDetailItem("third-party-check", record);
									});
									
									data.Document.details_transfers.forEach(function(record)
									{
										loadDetailItem("transfer", record);
									});
									
									// footer
									$('input[name="doc-comments"]').val(data.Document.comments);
									$('input[name="doc-exchange"]').val(data.Document.exchange);
									$('input[name="doc-withholdings"]').val(data.Document.withholdings);
									$('input[name="doc-total"]').val(data.Document.total);
									
									// update totals
									updateDetailAmounts( data.Document.exchange );
								}
								else if (data.Result == 'ERROR') {
									$.stdShowMessage({
										icon: 'fa fa-exclamation-triangle',
										message: data.Message,
										type: 'info'
									});
								}
							},
							error: function(jqXHR, textStatus, errorThrown) {
								console.warn(jqXHR.responseText);
							},
						});
					}
				}
				
				function loadDetailItem(key, data)
				{
					var window		= allDialogs[key];
					var detailText	= window.displayText;

					var recordData = [];
					window.fields.forEach(function(field)
					{
						var tag 	= field.tag;
						var name 	= field.name;
						var column	= field.column;
						var visible	= field.visible;
						var detail	= "";
						
						recordData[name] = data[column];
						if (visible)
						{
							if (tag == 'select')
							{
								detail = " | " + $('select[name="dialog-' + key + '-' + name + '-select"]')
													.find('option[value="' + data[column] + '"]')
													.attr("data-display");
							}
							else
							{
								detail = " | " + recordData[name];
							}
						}
						
						detailText += detail;
					});
					
					addNewRecord(key, detailText, recordData);
				}
				
				function isEdit()
				{
					return $("data[name='document-data']").length > 0 && getHeaderId() > 0;
				}
				
				function getHeaderId()
				{
					return $("data[name='document-data']").attr("data-header-id");
				}
				
			});
		</script>
	</body>
</html>