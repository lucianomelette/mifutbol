<!doctype html>
<html lang="en">
	<head>
		<?= $this->fetch('/partials/header.phtml') ?>
	</head>
	<body>
		<?= $this->fetch('/partials/navbar.phtml', $navbar) ?>
		
		<?= $this->fetch('/partials/toolbar.phtml', $navbar) ?>
		
		<div class="container-fluid">
			<div class="content">
				<div class="row">
					<div class="col-12 p-0">
						<div class="card card-no-rounded">
							<div class="card-header d-flex justify-content-between align-items-center">
								<span><b><i class="fa fa-plus"></i> <?= ((isset($matchId) and $matchId > 0) ? "Actualizar" : "Cargar") ?> Resultado</b></span>
							</div>
							
							<?php if (isset($matchId) and $matchId > 0) : ?>
							<data name="match-data" data-match-id="<?= $matchId ?>"></data>
							<?php endif; ?>
							
							<div class="card-body">
								
								<div class="row">
									<div class="col-12 col-md-4">
										<div class="form-group">
											<label class="font-weight-bold">Fecha:</label>
											<br>
											<input type="date" class="form-control" name="dated_at" />
										</div>
									</div>
									<div class="col-12 col-md-4">
										<div class="form-group">
											<label class="font-weight-bold">Goles Blancos:</label>
											<br>
											<input type="number" class="form-control" name="white_result" />
										</div>
									</div>
									<div class="col-12 col-md-4">
										<div class="form-group">
											<label class="font-weight-bold">Goles Negros:</label>
											<br>
											<input type="number" class="form-control" name="black_result" />
										</div>
									</div>
								</div>
								
								<hr />
								<div class="row mt-2">
									<div class="col-12">
										<div class="form-group">
											<label class="font-weight-bold">Comentarios:</label>
											<br>
											<input type="text" class="form-control" name="doc-comments" />
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<?= $this->fetch('/partials/libs.phtml') ?>
		
		<script>
			$(function(){
				
				// ***************************** //
				// ** DOCUMENT INITIALIZATION ** //
				// ***************************** //
				
				// block UI on every ajax
				$(document).ajaxStart(function() {
					$.blockUI({ message : null });
				})
				.ajaxStop(function() {
					$.unblockUI();
				});
				
				initializeDocument();
				
				// ********************* //
				// ** DOCUMENT EVENTS ** //
				// ********************* //
				
				// on before unload
				$(window).on('beforeunload', function() {
					if (hasUnsavedChanges())
						return "Hay cambios no guardados, Â¿desea salir de todas maneras?";
				});
				
				// toolbar actions
				$('#btn-toolbar-save').click(function(e) {
					e.preventDefault();
					saveDocument();
				});
				
				// ************************ //
				// ** DOCUMENT FUNCTIONS ** //
				// ************************ //
				
				function saveDocument() {
					
					if (validateDocument())
					{
						var data = {
							dated_at : 		$('input[name="dated_at"]').val(),
							white_result : 	parseInt($('input[name="white_result"]').val()),
							black_result : 	parseInt($('input[name="black_result"]').val()),
							comments : 		$('input[name="comments"]').val(),
						};
						
						if (isEdit())
						{
							data["id"] = getMatchId();
						}

						$.ajax({
							method: 'POST',
							url: '/matches/' + (isEdit() ? 'update' : 'create'),
							dataType: 'json',
							data: data,
							success: function(data, textStatus, jqXHR)
							{
								if (data.Result == 'OK')
								{
									$.stdShowMessage({
										icon: 'fa fa-check',
										message: data.Message,
										type: 'info'
									});
									
									if (!isEdit())
									{
									    resetDocument();
									}
								}
								else {
									alert('error');
								}
							},
							error: function(jqXHR, textStatus, errorThrown) {
								console.warn(jqXHR.responseText);
							},
						});
					}				
				}
				
				function validateDocument() {
					var message = "<b>Documento no guardado:</b>";
					var error = false;

					if ($('input[name="dated_at"]').val() == "") {
						message += "<br>Falta la fecha";
						error = true;
					}
					
					if ($('input[name="white_result"]').val() == "") {
						message += "<br>Falta resultado del Blanco";
						error = true;
					}

					if ($('input[name="black_result"]').val() == "") {
						message += "<br>Falta resultado del Negro";
						error = true;
					}
					
					if (error) {
						$.stdShowMessage({
							icon: 'fa fa-exclamation-triangle',
							message: message,
							type: 'warning'
						});
					}
					
					return !error;
				}
				
				function resetDocument()
				{
					$('input[name="dated_at"]').val(new Date().today);
					$('input[name="white_result"]').val("");
					$('input[name="black_result"]').val("");
					$('input[name="comments"]').val("");
				}
				
				function hasUnsavedChanges()
				{
					if ( $('input[name="dated_at"]').val() != "" )
						return true;

					if ( $('input[name="white_result"]').val() != "" )
						return true;

					if ( $('input[name="black_result"]').val() != "" )
						return true;

					if ( $('input[name="comments"]').val() != "" )
						return true;
					
					return false;
				}
				
				function initializeDocument()
				{
					if (isEdit())
					{
						var matchId = getMatchId();
						
						$.ajax({
							method: 'POST',
							url: '/matches/one/' + matchId,
							success: function(data, textStatus, jqXHR) 
							{
								if (data.Result == 'OK')
								{
									// match
									debugger;
									$('input[name="dated_at"]').val(data.Match.dated_at);
									$('input[name="white_result"]').val(data.Match.white_result);
									$('input[name="black_result"]').val(data.Match.black_result);
									$('input[name="comments"]').val(data.Match.comments);
								}
								else if (data.Result == 'ERROR') {
									$.stdShowMessage({
										icon: 'fa fa-exclamation-triangle',
										message: data.Message,
										type: 'info'
									});
								}
							},
							error: function(jqXHR, textStatus, errorThrown) {
								console.warn(jqXHR.responseText);
							},
						});
					}
				}
				
				function isEdit()
				{
					return $("data[name='match-data']").length > 0 && $("data[name='match-data']").attr("data-match-id") > 0;
				}
				
				function getMatchId()
				{
					return $("data[name='match-data']").attr("data-match-id");
				}
			});
		</script>
	</body>
</html>