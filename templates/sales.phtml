<!doctype html>
<html lang="en">
	<head>
		<?= $this->fetch('/partials/header.phtml') ?>
	</head>
	<body>
		<?= $this->fetch('/partials/navbar.phtml', $navbar) ?>
		
		<?= $this->fetch('/partials/toolbar.phtml', $navbar) ?>
		
		<?php $customers_enabled 		= (isset($customers) and count($customers) > 0); ?>
		<?php $documentsTypes_enabled	= (isset($documentsTypes) and count($documentsTypes) > 0); ?>
		<?php $products_enabled 		= (isset($products) and count($products) > 0); ?>
		
		<div class="container-fluid">
			<div class="content">
				<div class="row">
					<div class="col-12 p-0">
						<div class="card card-no-rounded">
							<div class="card-header d-flex justify-content-between align-items-center">
								<span><b><i class="fa fa-receipt"></i> Ventas <i class="fa fa-chevron-right"></i> Confecci√≥n de Comprobantes</b></span>
							</div>
							
							<?php if (isset($headerId) and $headerId > 0) : ?>
							<data name="document-data" data-header-id="<?= $headerId ?>"></data>
							<?php endif; ?>
							
							<div class="card-body">
								
								<div class="row">
									<div class="col-lg-3 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">Cliente:</label>
											<br>
											<label <?= !$customers_enabled ? '' : 'class="d-none" ' ?>name="customers-label"><i class="fa fa-exclamation-triangle"></i> No hay clientes disponibles!</label>
											<select class="form-control<?= $customers_enabled ? '' : ' d-none' ?>" name="customers-select">
											<?php if ($customers_enabled) : ?>
												<option value="N/A">Seleccionar cliente...</option>
											<?php foreach($customers as $customer) : ?>
												<option value="<?= $customer->id ?>">
													<?= $customer->unique_code . ' | ' . $customer->business_name ?>
												</option>
											<?php endforeach; ?>
											<?php endif; ?>
											</select>
										</div>
									</div>
									
									<div class="col-lg-3 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">Comprobante:</label>
											<br>
											<label <?= !$documentsTypes_enabled ? '' : 'class="d-none" ' ?>name="docs-types-label"><i class="fa fa-exclamation-triangle"></i> No hay documentos disponibles!</label>
											<select class="form-control<?= $documentsTypes_enabled ? '' : ' d-none' ?>" name="docs-types-select">
											<?php if ($documentsTypes_enabled) : ?>
												<option value="N/A">Seleccionar documento...</option>
											<?php foreach($documentsTypes as $documentType) : ?>
												<option
													value="<?= $documentType->unique_code ?>"
													data-sequence="<?= $documentType->sequence ?>">
													<?= trim($documentType->description) ?>
												</option>
											<?php endforeach; ?>
											<?php endif; ?>
											</select>
										</div>
									</div>
									
									<div class="col-lg-3 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">Fecha:</label>
											<br>
											<input type="date" class="form-control" name="doc-date" />
										</div>
									</div>
									
									<div class="col-lg-3 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">No. de comprobante:</label>
											<br>
											<input type="text" class="form-control" name="doc-number" value="0000-00000000" />
										</div>
									</div>
								</div>
								
								<div class="row mt-2">
									<div class="col">
										<label class="font-weight-bold small text-primary" name="customer-balance-text"></label>
									</div>
								</div>
								
								<hr />
								<div class="row mt-2">
									<div class="col-lg-12">
										<div class="row">
											<div class="col">
												<div class="badge badge-primary badge-outlined" name="btn-add-record"><i class="fa fa-plus"></i> Agregar Producto</div>
											</div>
										</div>
										
										<div class="row mt-2">
											<div class="col">
												<div class="table" name="table-content">
													<table class="table table-sm table-striped table-hover table-responsive-sm" name="detail-table">
														<thead>
															<tr>
																<th></th>
																<th>#</th>
																<th>Producto</th>
																<th>Cant.</th>
																<th>P.U.</th>
																<th>Subtotal</th>
																<th>I.V.A.</th>
																<th>Total</th>
															</tr>
														</thead>
														<tbody>
														</tbody>
													</table>
												</div>
											</div>
										</div>
									</div>
								</div>
								
								<hr />
								<div class="row mt-2">
									<div class="col-lg-6 col-md-12">
										<div class="form-group">
											<label class="font-weight-bold">Observaciones:</label>
											<br>
											<input type="text" class="form-control" name="doc-comments" />
										</div>
									</div>
								</div>
								
								<div class="row mt-2">
									<div class="col-lg-2 col-md-3">
										<div class="form-group">
											<label class="font-weight-bold">Subtotal:</label>
											<br>
											<div class="input-group">
												<div class="input-group-prepend">
													<span class="input-group-text">$</span>
												</div>
											    <input type="number" class="form-control" name="doc-subtotal" value="0" disabled />
										    </div>
										</div>
									</div>
									<div class="col-lg-2 col-md-3">
										<div class="form-group">
											<label class="font-weight-bold">Percepciones:</label>
											<br>
											<div class="input-group">
												<div class="input-group-prepend">
													<span class="input-group-text">$</span>
												</div>
											    <input type="number" class="form-control" name="doc-perceptions" value="0" />
    										</div>
										</div>
									</div>
									<div class="col-lg-2 col-md-3">
										<div class="form-group">
											<label class="font-weight-bold">Impuestos:</label>
											<br>
											<div class="input-group">
												<div class="input-group-prepend">
													<span class="input-group-text">$</span>
												</div>
											    <input type="number" class="form-control" name="doc-taxes" value="0" />
    										</div>
										</div>
									</div>
									<div class="col-lg-2 col-md-3">
										<div class="form-group">
											<label class="font-weight-bold">Total:</label>
											<br>
											<div class="input-group">
												<div class="input-group-prepend">
													<span class="input-group-text">$</span>
												</div>
											    <input type="number" class="form-control" name="doc-total" value="0" disabled />
										    </div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<!-- add or edit products dialog -->
		<div class="d-none" name="add-or-edit-product-dialog" title="Agregar producto">
			<div class="content">
				<div class="row">
					<div class="col-12">
						<div class="form-group">
							<label class="font-weight-bold">Producto:</label>
							<br>
							<label <?= !$products_enabled ? '' : 'class="d-none" ' ?>name="products-label"><i class="fa fa-exclamation-triangle"></i> No hay productos disponibles!</label>
							<select class="form-control<?= $products_enabled ? '' : ' d-none' ?>" name="dialog-products-select">
							<?php if($products_enabled) : ?>
								<option value="N/A">Seleccionar producto...</option>
							<?php foreach($products as $product) : ?>
								<option value="<?= $product->id ?>" data-description="<?= trim($product->description) ?>">
									<?= $product->unique_code . ' | ' . $product->description ?>
								</option>
							<?php endforeach; ?>
							<?php endif; ?>
							</select>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-md-4">
						<div class="form-group">
							<label class="font-weight-bold">Cantidad:</label>
							<br>
							<input type='number' step='.01' value='0' class='form-control' name='dialog-quantity' />
						</div>
					</div>
					
					<div class="col-md-4">
						<div class="form-group">
							<label class="font-weight-bold">Precio U.:</label>
							<br>
							<div class="input-group">
								<div class="input-group-prepend">
									<span class="input-group-text">$</span>
								</div>
							    <input type='number' step='.01' value='0' class='form-control' name='dialog-unit-price' />
						    </div>
						</div>
					</div>
					
					<div class="col-md-4">
						<div class="form-group">
							<label class="font-weight-bold">Subtotal:</label>
							<br>
							<div class="input-group">
								<div class="input-group-prepend">
									<span class="input-group-text">$</span>
								</div>
							    <input type='number' step='.01' value='0' class='form-control' name='dialog-subtotal' disabled />
						    </div>
						</div>
					</div>
				</div>
				
				<div class="row">
					<div class="col-md-6">
						<div class="form-group">
							<label class="font-weight-bold">I.V.A.:</label>
							<br>
							<select class='form-control' name='dialog-taxes-select'>
								<option value='0' selected>0.00%</option>
								<option value='10.5'>10.50%</option>
								<option value='21'>21.00%</option>
							</select>
						</div>
					</div>
					
					<div class="col-md-6">
						<div class="form-group">
							<label class="font-weight-bold">Total:</label>
							<br>
							<div class="input-group">
								<div class="input-group-prepend">
									<span class="input-group-text">$</span>
								</div>
							    <input type='number' step='.01' value='0' class='form-control' name='dialog-total' disabled />
						    </div>
						</div>
					</div>
				</div>
			</div>
		</div>
			
		<?= $this->fetch('/partials/libs.phtml') ?>
		
		<!-- Optional JavaScript -->
		<script>
			$(function(){
				
				// ***************************** //
				// ** DOCUMENT INITIALIZATION ** //
				// ***************************** //
				
				// block UI on every ajax
				$(document)
					.ajaxStart(function() {
						$.blockUI({ message : null });
					})
					.ajaxStop(function() {
						$.unblockUI();
					});
				
				var addOrEditProductsDialog = $('div[name="add-or-edit-product-dialog"]');
				
				var currentRecordNumber = 0;	
				
				// create viewports
				$("body").append('<div class="device-xs d-block d-sm-none"></div>');
				$("body").append('<div class="device-sm d-none d-sm-block d-md-none"></div>');
				$("body").append('<div class="device-md d-none d-md-block d-lg-none"></div>');
				$("body").append('<div class="device-lg d-none d-lg-block d-xl-none"></div>');
				$("body").append('<div class="device-xl d-none d-xl-block"></div>');
				
				setupSelects();
				
				setupAddOrEditProductDialogs();
				
				setupButtons();
				
				initializeDocument();
				
				// Context Menu
				$.contextMenu({
					selector: 'span[name="btn-row-context-menu"]',
					trigger: 'left',
					items: {
						"edit": {
							name: '<span><i class="fa fa-edit"></i> Editar</span>',
							isHtmlName: true,
							callback: function(itemKey, opt, e) {
								var recordKey = opt.$trigger.attr('data-record-key');
								var row = $('tr#' + recordKey);

								var recordData = {
									record_key :	recordKey,
									product_id : 	row.find('td[name="col-product"]').attr('data-key'),
									quantity : 		row.find('td[name="col-quantity"]').text(),
									unit_price :	row.find('td[name="col-unit-price"]').text(),
									subtotal :		row.find('td[name="col-subtotal"]').text(),
									tax_id :		row.find('td[name="col-tax"]').attr('data-key'),
									total :			row.find('td[name="col-total"]').text(),
								};
								
								showAddOrEditProductDialog(recordData)
								
								return true;            
							}   
						},
						"delete": {
							name: '<span><i class="fa fa-trash-alt"></i> Eliminar</span>',
							isHtmlName: true,
							callback: function(itemKey, opt, e) {
								var row = $('tr#' + opt.$trigger.attr('data-record-key'));
								row.remove();
								
								// update document totals
								updateDocumentTotals();
								
								return true;            
							}   
						},
					}
				});
				
				// ********************* //
				// ** DOCUMENT EVENTS ** //
				// ********************* //
				
				// on window resize
				$(window).resize(function(){
					
					// check if add or edit products dialog is open
					if ( addOrEditProductsDialog.dialog("isOpen") ) {
						updateAddOrEditProductsDialogSize();
					}
				});
				
				// on before unload
				$(window).on('beforeunload', function() {
					if (hasUnsavedChanges())
						return "Hay cambios no guardados, ¬ødesea salir de todas maneras?";
				});
				
				// customers change
				$('select[name="customers-select"]').change(function(e) {
				    var customerId = $(this).val();
					updateCustomerBalance(customerId);
				});
				
				// toolbar actions
				$('#btn-toolbar-save').click(function(e) {
					e.preventDefault();
					saveDocument();
				});
				
				// documents types change
				$('select[name="docs-types-select"]').change(function(e) {
				    var docNumber = "0000-00000000";
				    var seq = $(this).find("option:selected").attr("data-sequence");
				    var pad = "00000000";
                    
                    if (seq != undefined) {
                        docNumber = "0000-" + pad.substring(0, pad.length - seq.length) + seq;
                    }

				    $('input[name="doc-number"]').val(docNumber);
				});
				
				// perceptions change
				$('input[name="doc-perceptions"]').change(function(e) {
					updateDocumentTotals();
				});
				
				// taxes change
				$('input[name="doc-taxes"]').change(function(e) {
					updateDocumentTotals();
				});
				
				// on input type="number" got focus
				$('input[type="number"]').focus(function(e) {
					if ( $(this).val() == 0 ) {
						$(this).val("");
					}
				});
				
				// ************************ //
				// ** DOCUMENT FUNCTIONS ** //
				// ************************ //
				
				// check viewport
				function isBreakpoint(alias) {
					return $('.device-' + alias).is(':visible');
				}			
				
				// update add or edit products dialog size
				function updateAddOrEditProductsDialogSize() {
					
					// define dialog width
					var dialogWidth = "50%";
					if (isBreakpoint('sm') || isBreakpoint('xs')) {
						dialogWidth = "95%";
					}
					
					// set width
					addOrEditProductsDialog.dialog({ width : dialogWidth });
				}				
				
				function setupSelects() {
					// customers
					if ( !$('select[name="customers-select"]').hasClass('d-none') )
						$('select[name="customers-select"]').select2({ width : '100%' }); // .chosen({ max_shown_results : 6, width : "100%" });
					
					// documents types
					if ( !$('select[name="docs-types-select"]').hasClass('d-none') )
						$('select[name="docs-types-select"]').select2({ width : '100%' });
					
					// dialog products
					if ( !$('select[name="dialog-products-select"]').hasClass('d-none') )
						$('select[name="dialog-products-select"]').select2({ width : '100%' });
				}
				
				function setupAddOrEditProductDialogs() {
					
					// to calculate dialog totals
					$('input[name="dialog-quantity"]').change(function(e){
						updateDialogTotals();
					});
					
					$('input[name="dialog-unit-price"]').change(function(e){
						updateDialogTotals();
					});
					
					$('select[name="dialog-taxes-select"]').change(function(e){
						updateDialogTotals();
					});
					
					// add or edit product dialog
					$('div[name="add-or-edit-product-dialog"]').dialog({
						resizable: false,
						height: "auto",
						modal: true,
						autoOpen: false,
						buttons: {
							Cancelar: function() {
								$(this).dialog("close");
							},
							Agregar: function() {

								if ( $('select[name="dialog-products-select"]').val() == "N/A"
									|| $('select[name="dialog-products-select"]').hasClass("d-none") ) {
									$.stdShowMessage({
										icon: 'fa fa-exclamation-triangle',
										message: "Debe seleccionar un producto",
										type: 'warning'
									});
									
									return;
								}
							
								var recordData = {
									product_id : 	$('select[name="dialog-products-select"] option:selected').val(),
									product_desc : 	$('select[name="dialog-products-select"] option:selected').attr("data-description"),
									quantity : 		$('input[name="dialog-quantity"]').val(),
									unit_price :	$('input[name="dialog-unit-price"]').val(),
									subtotal :		$('input[name="dialog-subtotal"]').val(),
									tax_id :		$('select[name="dialog-taxes-select"] option:selected').val(),
									tax_desc :		$('select[name="dialog-taxes-select"] option:selected').text(),
									total :			$('input[name="dialog-total"]').val(),
								};
								
								var recordKey = $(this).dialog("option", "recordKey");
								if (recordKey == 0) {
									addNewRecord(recordData);
								}
								else {
									editRecord(recordKey, recordData);
								}
								
								$(this).dialog("close");
							},
						},
						create: function() {
							$(this).removeClass("d-none");
						},
						// # select2: resolve focus issue
						_allowInteraction: function (event) {
							return !!$(event.target).is(".select2-input") || this._super(event);
						},
					});
				}
				
				function setupButtons() {
					// add record
					$('div[name="btn-add-record"]').on('click', function(e) {
						e.preventDefault();
						showAddOrEditProductDialog();
					});
				}
				
				function showAddOrEditProductDialog(recordData) {

					if (recordData != undefined) {
						addOrEditProductsDialog.dialog("option", "recordKey", recordData.record_key);
						
						$('select[name="dialog-products-select"]').val(recordData.product_id);
						$('input[name="dialog-quantity"]').val(recordData.quantity);
						$('input[name="dialog-unit-price"]').val(recordData.unit_price);
						$('input[name="dialog-subtotal"]').val(recordData.subtotal);
						$('select[name="dialog-taxes-select"]').val(recordData.tax_id);
						$('input[name="dialog-total"]').val(recordData.total);
					}
					else {
						addOrEditProductsDialog.dialog("option", "recordKey", 0);
						
						$('select[name="dialog-products-select"]').val('N/A').trigger('change');
						$('input[name="dialog-quantity"]').val(0);
						$('input[name="dialog-unit-price"]').val(0);
						$('input[name="dialog-subtotal"]').val(0);
						$('select[name="dialog-taxes-select"]').val( $('select[name="dialog-taxes-select"] option:first').val() );
						$('input[name="dialog-total"]').val(0);
					}
					
					updateAddOrEditProductsDialogSize();
					
					// # select2: resolve focus issue
					if ($.ui && $.ui.dialog && $.ui.dialog.prototype._allowInteraction) {
						var ui_dialog_interaction = $.ui.dialog.prototype._allowInteraction;
						$.ui.dialog.prototype._allowInteraction = function(e) {
							if ($(e.target).closest('.select2-dropdown').length) return true;
							return ui_dialog_interaction.apply(this, arguments);
						};
					}
					
					addOrEditProductsDialog.dialog("open");
				}
				
				// get detail table
				function getDetailTable() {
					return $('table[name="detail-table"]');
				}
				
				// get detail table body
				function getDetailTableBody() {
					return getDetailTable().find('tbody');
				}
				
				// get detail table rows
				function getDetailTableRows() {
					return getDetailTableBody().find('tr');
				}
				
				// add new record
				function addNewRecord(data) {
					var body = getDetailTableBody();
					
					currentRecordNumber++;

					var newRecordHTML =
						"<tr id='" + currentRecordNumber + "'>" +
							"<td class='align-middle'><span class='btn btn-light btn-sm' name='btn-row-context-menu' data-record-key='" + currentRecordNumber + "'><i class='fa fa-ellipsis-v'></i></span></td>" +
							"<td class='align-middle font-weight-bold'>" + currentRecordNumber + "</td>" +
							"<td class='align-middle form-inline' name='col-product' width='350px' data-key='" + data.product_id + "'>" + data.product_desc + "</td>" +
							"<td class='align-middle' name='col-quantity'>" + data.quantity + "</td>" +
							"<td class='align-middle' name='col-unit-price'>" + data.unit_price + "</td>" +
							"<td class='align-middle' name='col-subtotal'>" + data.subtotal + "</td>" +
							"<td class='align-middle' name='col-tax' data-key='" + data.tax_id + "'>" + data.tax_desc + "</td>" +
							"<td class='align-middle' name='col-total'>" + data.total + "</td>" +
						"</tr>";
						
					body.append(newRecordHTML);
					
					updateDocumentTotals();
				}
				
				// edit record
				function editRecord(recordKey, data) {
					var row = $('tr#' + recordKey);
					
					row.find('td[name="col-product"]').attr('data-key', data.product_id);
					row.find('td[name="col-product"]').text(data.product_desc);
                    row.find('td[name="col-quantity"]').text(data.quantity);
                    row.find('td[name="col-unit-price"]').text(data.unit_price);
                    row.find('td[name="col-subtotal"]').text(data.subtotal);
                    row.find('td[name="col-tax"]').attr('data-key', data.tax_id);
                    row.find('td[name="col-tax"]').text(data.tax_desc);
                    row.find('td[name="col-total"]').text(data.total);
					
					updateDocumentTotals();
				}
				
				function updateCustomerBalance(customerId)
				{	
					if (customerId == "N/A")
					{
						$('label[name="customer-balance-text"]').text("");
					}
					else
					{
						$.ajax({
							method: 'POST',
							url: '/customers/balance/' + customerId,
							dataType: 'json',
							success: function(data, textStatus, jqXHR) {
								if (data.Result == 'OK') {
									$('label[name="customer-balance-text"]').text("Saldo Cta. Cte.: AR$ " + data.Balance);
								}
								else {
									$('label[name="customer-balance-text"]').text("");
								}
							},
							error: function(jqXHR, textStatus, errorThrown) {
								console.warn(jqXHR.responseText);
							},
						});
					}
				}
				
				function updateDocumentTotals() {
					var rows 			= getDetailTableRows();
					var perceptions		= $('input[name="doc-perceptions"]').val();
					var taxes			= $('input[name="doc-taxes"]').val();
					var subtotal 		= 0;
					var total	 		= 0;
					
					rows.each(function(index){
						subtotal += parseFloat( $(this).find('td[name="col-total"]').text() );
					});
					
					total += subtotal;
					
					if (perceptions != '' && $.isNumeric(perceptions)) {
						total += parseFloat(perceptions);
					}
					
					if (taxes != '' && $.isNumeric(taxes)) {
						total += parseFloat(taxes);
					}
					
					$('input[name="doc-subtotal"]').val(subtotal);
					$('input[name="doc-total"]').val(total);
				}
				
				function saveDocument() {
					
					if (validateDocument())
					{
						var rows = getDetailTableRows();
						var detailData = [];
						rows.each(function(index){

							detailData[index] = {
								product_id : 			parseInt($(this).find('td[name="col-product"]').attr("data-key")),
								product_description : 	$(this).find('td[name="col-product"]').text().trim(),
								quantity : 				parseFloat($(this).find('td[name="col-quantity"]').text()),
								unit_price : 			parseFloat($(this).find('td[name="col-unit-price"]').text()),
								subtotal : 				parseFloat($(this).find('td[name="col-subtotal"]').text()),
								tax : 					parseFloat($(this).find('td[name="col-tax"]').attr("data-key")),
								total : 				parseFloat($(this).find('td[name="col-total"]').text()),
							};
						});
						
						var documentData = {
							customer_id : 			$('select[name="customers-select"] option:selected').val(),
							document_type_code : 	$('select[name="docs-types-select"] option:selected').val(),
							number : 				$('input[name="doc-number"]').val(),
							dated_at : 				$('input[name="doc-date"]').val(),
							subtotal : 				parseFloat($('input[name="doc-subtotal"]').val()),
							perceptions : 			parseFloat($('input[name="doc-perceptions"]').val()),
							taxes :		 			parseFloat($('input[name="doc-taxes"]').val()),
							total : 				parseFloat($('input[name="doc-total"]').val()),
							comments : 				$('input[name="doc-comments"]').val(),
							detail :				detailData,
						};
						
						if (isEdit())
						{
							documentData["id"] = getHeaderId();
						}

						$.ajax({
							method: 'POST',
							url: '/sales/' + (isEdit() ? 'update' : 'create'),
							dataType: 'json',
							data: documentData,
							success: function(data, textStatus, jqXHR) {
								if (data.status == 'OK') {
									$.stdShowMessage({
										icon: 'fa fa-check',
										message: data.message,
										type: 'info'
									});
									
									if (!isEdit())
									{
									    resetDocument(documentData);
									}
								}
								else {
									alert('error');
								}
							},
							error: function(jqXHR, textStatus, errorThrown) {
								console.warn(jqXHR.responseText);
							},
						});
					}				
				}
				
				function validateDocument() {
					var message = "<b>Documento no guardado:</b>";
					var error = false;
					
					if ( $('select[name="customers-select"]').val() == "N/A"
						|| $('select[name="customers-select"]').hasClass("d-none") ) {
						message += "<br>Debe seleccionar un cliente";
						error = true;
					}
					
					if ( $('select[name="docs-types-select"]').val() == "N/A"
						|| $('select[name="docs-types-select"]').hasClass("d-none") ) {
						message += "<br>Debe seleccionar un documento";
						error = true;
					}

					if (getDetailTableRows().length <= 0) {
						message += "<br>Debe ingresar al menos 1 producto";
						error = true;
					}
					
					if (error) {
						$.stdShowMessage({
							icon: 'fa fa-exclamation-triangle',
							message: message,
							type: 'warning'
						});
					}
					
					return !error;
				}
				
				function resetDocument(data)
				{
					$('select[name="customers-select"]').val('N/A').trigger('change');
					$('select[name="docs-types-select"]').val('N/A').trigger('change');
					$('input[name="doc-date"]').val("");
					$('input[name="doc-number"]').val("0000-00000000");
					
					getDetailTableBody().empty();
					
					$('input[name="doc-comments"]').val("");
					$('input[name="doc-subtotal"]').val(0);
					$('input[name="doc-perceptions"]').val(0);
					$('input[name="doc-taxes"]').val(0);
					$('input[name="doc-total"]').val(0);
					
					currentRecordNumber = 0;
					
					// update document type sequence
					var seq = data.number.trim().substring(5);
					if ( $.isNumeric(seq) ) {
						var nextSeq = parseInt(seq) + 1;
						$('select[name="docs-types-select"] > option[value="' + data.document_type_code + '"]').attr("data-sequence", nextSeq);
					}
				}
				
				function hasUnsavedChanges()
				{
					if ( $('select[name="customers-select"]').val() != 'N/A' )
						return true;
					
					if ( $('select[name="docs-types-select"]').val() != 'N/A' )
						return true;
					
					if ( $('input[name="doc-date"]').val() != "" )
						return true;
					
					if ( getDetailTableRows().length > 0 )
						return true;
					
					return false;
				}
				
				function initializeDocument()
				{
					if (isEdit())
					{
						var headerId = getHeaderId();
						
						$.ajax({
							method: 'POST',
							url: '/sales/one/' + headerId,
							success: function(data, textStatus, jqXHR) {
								if (data.Result == 'OK')
								{
									// header
									$('select[name="customers-select"]').val(data.Document.customer_id).trigger('change');
									$('select[name="docs-types-select"]').val(data.Document.document_type_code).trigger('change');
									$('input[name="doc-date"]').val(data.Document.dated_at);
									$('input[name="doc-number"]').val(data.Document.number);
									
									// detail
									data.Document.details.forEach(function(detail)
									{
										var recordData = {
											product_id : 	detail.product_id,
											product_desc : 	detail.product_description,
											quantity : 		detail.quantity,
											unit_price :	detail.unit_price,
											subtotal :		detail.subtotal,
											tax_id :		detail.tax,
											tax_desc :		detail.tax + '%',
											total :			detail.total,
										};
										
										addNewRecord(recordData);
									});
									
									// footer
									$('input[name="doc-subtotal"]').val(data.Document.subtotal);
									$('input[name="doc-perceptions"]').val(data.Document.perceptions);
									$('input[name="doc-taxes"]').val(data.Document.taxes);
									$('input[name="doc-total"]').val(data.Document.total);
								}
								else if (data.Result == 'ERROR') {
									$.stdShowMessage({
										icon: 'fa fa-exclamation-triangle',
										message: data.Message,
										type: 'info'
									});
								}
							},
							error: function(jqXHR, textStatus, errorThrown) {
								console.warn(jqXHR.responseText);
							},
						});
					}
				}
				
				function isEdit()
				{
					return $("data[name='document-data']").length > 0 && $("data[name='document-data']").attr("data-header-id") > 0;
				}
				
				function getHeaderId()
				{
					return $("data[name='document-data']").attr("data-header-id");
				}
				
				// ********************** //
				// ** DIALOG FUNCTIONS ** //
				// ********************** //
				
				function updateDialogTotals() {
					var quantity 	= $('input[name="dialog-quantity"]').val();
					var unitPrice	= $('input[name="dialog-unit-price"]').val();
					var subtotal	= 0;
					var tax			= $('select[name="dialog-taxes-select"] option:selected').val();
					var total		= 0;

					if (quantity != '' && $.isNumeric(quantity) && unitPrice != '' && $.isNumeric(unitPrice)) {
						subtotal = (quantity * unitPrice);
						
						if (tax != '' && $.isNumeric(tax)) {
							total = subtotal + (subtotal * tax / 100);
						}
						else {
							total = subtotal;
						}
					}
					
					// subtotal
					$('input[name="dialog-subtotal"]').val(subtotal);
					
					// total
					$('input[name="dialog-total"]').val(total);
				}			
				
			});
		</script>
	</body>
</html>